// üö® CORRE√á√ÉO CR√çTICA PARA EQUAL WEIGHT V3
// O problema √© que _computeEqualWeightV3 n√£o est√° recebendo os dados na estrutura correta

function corrigirEqualWeightV3() {
  console.log('üîß APLICANDO CORRE√á√ÉO PARA EQUAL WEIGHT V3');
  
  // 1. For√ßa o carregamento do scoring.js
  fetch('/lib/audio/features/scoring.js?v=' + Date.now())
    .then(response => response.text())
    .then(scoreCode => {
      console.log('‚úÖ scoring.js recarregado');
      
      // 2. Patchear a fun√ß√£o para debug
      const originalCode = scoreCode;
      
      // Interceptar _computeEqualWeightV3 para debug
      const patchedCode = originalCode.replace(
        'function _computeEqualWeightV3(analysisData) {',
        `function _computeEqualWeightV3(analysisData) {
          console.log('[EQUAL_WEIGHT_V3_PATCH] üìä Dados recebidos:', analysisData);
          console.log('[EQUAL_WEIGHT_V3_PATCH] üìã Metrics keys:', Object.keys(analysisData?.metrics || {}));
          console.log('[EQUAL_WEIGHT_V3_PATCH] üìã Reference keys:', Object.keys(analysisData?.reference || {}));
          
          // Verificar se √© null ou undefined
          if (!analysisData) {
            console.error('[EQUAL_WEIGHT_V3_PATCH] ‚ùå analysisData √© null/undefined!');
            return { score: 50, classification: 'B√°sico', method: 'equal_weight_v3_fallback' };
          }
          
          if (!analysisData.metrics) {
            console.error('[EQUAL_WEIGHT_V3_PATCH] ‚ùå analysisData.metrics √© null/undefined!');
            return { score: 50, classification: 'B√°sico', method: 'equal_weight_v3_fallback' };
          }`
      );
      
      // 3. Executa o c√≥digo corrigido
      eval(patchedCode);
      console.log('‚úÖ _computeEqualWeightV3 patcheado com debug');
      
      // 4. For√ßa atualiza√ß√£o das fun√ß√µes globais
      if (typeof computeMixScore === 'function') {
        window.computeMixScore = computeMixScore;
        console.log('‚úÖ computeMixScore atualizado globalmente');
      }
      
      if (typeof _computeEqualWeightV3 === 'function') {
        window._computeEqualWeightV3 = _computeEqualWeightV3;
        console.log('‚úÖ _computeEqualWeightV3 atualizado globalmente');
      }
      
      console.log('üéØ CORRE√á√ÉO APLICADA! Teste uma an√°lise agora...');
    })
    .catch(err => {
      console.error('‚ùå Erro ao corrigir Equal Weight V3:', err);
    });
}

// Aplicar corre√ß√£o
corrigirEqualWeightV3();
