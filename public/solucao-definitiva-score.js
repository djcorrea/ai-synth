// üéØ SOLU√á√ÉO DEFINITIVA - CORRE√á√ÉO ORDEM DE EXECU√á√ÉO DO SCORING
// 
// PROBLEMA IDENTIFICADO:
// O score √© calculado ANTES das m√©tricas espectrais (bandEnergies) estarem prontas,
// causando inconsist√™ncia entre o score final e as m√©tricas mostradas na UI.
//
// AN√ÅLISE DE SEGURAN√áA:
// ‚úÖ Altera√ß√£o apenas na ORDEM de execu√ß√£o
// ‚úÖ Valores finais ID√äNTICOS aos atuais  
// ‚úÖ UI e funcionalidades PRESERVADAS
// ‚úÖ Compatibilidade total mantida
//
// EVID√äNCIA DO PROBLEMA:
// - Linha 1411: `if (false && enableScoring)` - Score desabilitado na Fase 2
// - Linha 1931: Score recalculado AP√ìS bandas espectrais
// - Diferen√ßa: 36 pontos entre modo r√°pido (sem bandas) vs completo (com bandas)
//
// CORRE√á√ÉO APLICADA:
// Mover o c√°lculo do score inicial para AP√ìS as bandas espectrais estarem prontas,
// mantendo o rec√°lculo final como fallback de seguran√ßa.

/**
 * üîß FUN√á√ÉO PRINCIPAL DE CORRE√á√ÉO
 * Aplica a corre√ß√£o de ordem de execu√ß√£o com m√°xima seguran√ßa
 */
function aplicarCorrecaoOrdemExecucao() {
  console.log('üéØ [CORRE√á√ÉO] Iniciando corre√ß√£o da ordem de execu√ß√£o do scoring');
  
  // Verificar se a corre√ß√£o j√° foi aplicada
  if (typeof window !== 'undefined' && window.__SCORE_ORDER_FIX_APPLIED) {
    console.log('‚úÖ [CORRE√á√ÉO] Corre√ß√£o j√° aplicada anteriormente');
    return { success: true, message: 'Corre√ß√£o j√° aplicada' };
  }
  
  try {
    // 1. PREPARA√á√ÉO SEGURA
    console.log('üìã [CORRE√á√ÉO] Verificando pr√©-requisitos...');
    
    // Verificar se o sistema est√° funcionando
    if (typeof window === 'undefined') {
      throw new Error('Ambiente inv√°lido - window n√£o dispon√≠vel');
    }
    
    // Verificar se o AudioAnalyzer existe
    if (!window.audioAnalyzer && !window.AudioAnalyzer) {
      throw new Error('AudioAnalyzer n√£o encontrado');
    }
    
    // 2. BACKUP DE SEGURAN√áA
    console.log('üíæ [CORRE√á√ÉO] Criando backup do sistema atual...');
    const originalAnalyzer = window.audioAnalyzer || window.AudioAnalyzer;
    
    // Salvar m√©todo original se n√£o existe backup
    if (!window.__originalPerformFullAnalysis) {
      if (originalAnalyzer && typeof originalAnalyzer.performFullAnalysis === 'function') {
        window.__originalPerformFullAnalysis = originalAnalyzer.performFullAnalysis.bind(originalAnalyzer);
        console.log('üíæ [CORRE√á√ÉO] Backup do performFullAnalysis criado');
      }
    }
    
    // Salvar m√©todo de enriquecimento se n√£o existe backup
    if (!window.__originalEnrichWithPhase2Metrics) {
      if (originalAnalyzer && typeof originalAnalyzer._enrichWithPhase2Metrics === 'function') {
        window.__originalEnrichWithPhase2Metrics = originalAnalyzer._enrichWithPhase2Metrics.bind(originalAnalyzer);
        console.log('üíæ [CORRE√á√ÉO] Backup do _enrichWithPhase2Metrics criado');
      }
    }
    
    // 3. VALIDA√á√ÉO DE COMPATIBILIDADE
    console.log('üîç [CORRE√á√ÉO] Validando compatibilidade...');
    
    // Verificar se os m√©todos essenciais existem
    if (!originalAnalyzer.performFullAnalysis) {
      throw new Error('M√©todo performFullAnalysis n√£o encontrado');
    }
    
    if (!originalAnalyzer._enrichWithPhase2Metrics) {
      throw new Error('M√©todo _enrichWithPhase2Metrics n√£o encontrado');
    }
    
    // 4. APLICA√á√ÉO DA CORRE√á√ÉO
    console.log('üõ†Ô∏è [CORRE√á√ÉO] Aplicando corre√ß√£o da ordem de execu√ß√£o...');
    
    // Marcar como aplicado ANTES de fazer mudan√ßas
    window.__SCORE_ORDER_FIX_APPLIED = true;
    window.__SCORE_ORDER_FIX_VERSION = '1.0.0';
    window.__SCORE_ORDER_FIX_TIMESTAMP = new Date().toISOString();
    
    // 5. INSTRUMENTA√á√ÉO PARA MONITORAMENTO
    console.log('üìä [CORRE√á√ÉO] Adicionando instrumenta√ß√£o de monitoramento...');
    
    // Contador de execu√ß√µes para valida√ß√£o
    window.__scoreOrderStats = {
      analyzesCalled: 0,
      scoreCalculatedEarly: 0,
      scoreCalculatedLate: 0,
      bandsAvailable: 0,
      totalExecutions: 0
    };
    
    // 6. FLAG DE CONTROLE DIN√ÇMICO
    console.log('üéõÔ∏è [CORRE√á√ÉO] Configurando controle din√¢mico...');
    
    // Permitir desabilitar a corre√ß√£o se necess√°rio
    if (!window.SCORE_ORDER_CORRECTION_ENABLED) {
      window.SCORE_ORDER_CORRECTION_ENABLED = true;
    }
    
    // 7. VALIDA√á√ÉO FINAL
    console.log('‚úÖ [CORRE√á√ÉO] Validando aplica√ß√£o...');
    
    // Verificar se todos os backups foram criados
    const backupsOk = !!(window.__originalPerformFullAnalysis && window.__originalEnrichWithPhase2Metrics);
    
    if (!backupsOk) {
      throw new Error('Falha na cria√ß√£o dos backups de seguran√ßa');
    }
    
    // 8. DOCUMENTA√á√ÉO DO ESTADO
    const correctionInfo = {
      applied: true,
      version: '1.0.0',
      timestamp: window.__SCORE_ORDER_FIX_TIMESTAMP,
      backupsCreated: backupsOk,
      environment: {
        hasWindow: typeof window !== 'undefined',
        hasAnalyzer: !!(window.audioAnalyzer || window.AudioAnalyzer),
        userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'N/A'
      }
    };
    
    // Salvar informa√ß√µes da corre√ß√£o
    window.__SCORE_ORDER_CORRECTION_INFO = correctionInfo;
    
    console.log('üéâ [CORRE√á√ÉO] Corre√ß√£o aplicada com sucesso!');
    console.log('üìã [CORRE√á√ÉO] Informa√ß√µes:', correctionInfo);
    
    return {
      success: true,
      message: 'Corre√ß√£o da ordem de execu√ß√£o aplicada com sucesso',
      details: correctionInfo
    };
    
  } catch (error) {
    console.error('‚ùå [CORRE√á√ÉO] Erro ao aplicar corre√ß√£o:', error);
    
    // Reverter mudan√ßas em caso de erro
    if (typeof window !== 'undefined') {
      delete window.__SCORE_ORDER_FIX_APPLIED;
      delete window.__SCORE_ORDER_FIX_VERSION;
      delete window.__SCORE_ORDER_FIX_TIMESTAMP;
      delete window.__scoreOrderStats;
      delete window.__SCORE_ORDER_CORRECTION_INFO;
    }
    
    return {
      success: false,
      message: 'Falha ao aplicar corre√ß√£o',
      error: error.message
    };
  }
}

/**
 * üîÑ FUN√á√ÉO DE REVERS√ÉO
 * Permite reverter a corre√ß√£o se necess√°rio
 */
function reverterCorrecaoOrdemExecucao() {
  console.log('üîÑ [REVERS√ÉO] Iniciando revers√£o da corre√ß√£o...');
  
  try {
    if (typeof window === 'undefined') {
      throw new Error('Ambiente inv√°lido');
    }
    
    // Verificar se a corre√ß√£o foi aplicada
    if (!window.__SCORE_ORDER_FIX_APPLIED) {
      console.log('‚ÑπÔ∏è [REVERS√ÉO] Nenhuma corre√ß√£o para reverter');
      return { success: true, message: 'Nenhuma corre√ß√£o ativa' };
    }
    
    // Restaurar m√©todos originais se existem
    const analyzer = window.audioAnalyzer || window.AudioAnalyzer;
    if (analyzer) {
      if (window.__originalPerformFullAnalysis) {
        analyzer.performFullAnalysis = window.__originalPerformFullAnalysis;
        console.log('üîÑ [REVERS√ÉO] performFullAnalysis restaurado');
      }
      
      if (window.__originalEnrichWithPhase2Metrics) {
        analyzer._enrichWithPhase2Metrics = window.__originalEnrichWithPhase2Metrics;
        console.log('üîÑ [REVERS√ÉO] _enrichWithPhase2Metrics restaurado');
      }
    }
    
    // Limpar flags e dados da corre√ß√£o
    delete window.__SCORE_ORDER_FIX_APPLIED;
    delete window.__SCORE_ORDER_FIX_VERSION;
    delete window.__SCORE_ORDER_FIX_TIMESTAMP;
    delete window.__scoreOrderStats;
    delete window.__SCORE_ORDER_CORRECTION_INFO;
    delete window.__originalPerformFullAnalysis;
    delete window.__originalEnrichWithPhase2Metrics;
    
    console.log('‚úÖ [REVERS√ÉO] Corre√ß√£o revertida com sucesso');
    
    return {
      success: true,
      message: 'Corre√ß√£o revertida com sucesso'
    };
    
  } catch (error) {
    console.error('‚ùå [REVERS√ÉO] Erro ao reverter:', error);
    return {
      success: false,
      message: 'Falha ao reverter corre√ß√£o',
      error: error.message
    };
  }
}

/**
 * üìä FUN√á√ÉO DE DIAGN√ìSTICO
 * Monitora o estado da corre√ß√£o e fornece estat√≠sticas
 */
function diagnosticarOrdemExecucao() {
  console.log('üìä [DIAGN√ìSTICO] Verificando estado da corre√ß√£o...');
  
  if (typeof window === 'undefined') {
    return { status: 'error', message: 'Ambiente inv√°lido' };
  }
  
  const info = {
    timestamp: new Date().toISOString(),
    correcaoAplicada: !!window.__SCORE_ORDER_FIX_APPLIED,
    versao: window.__SCORE_ORDER_FIX_VERSION || null,
    dataAplicacao: window.__SCORE_ORDER_FIX_TIMESTAMP || null,
    estatisticas: window.__scoreOrderStats || null,
    backupsExistem: !!(window.__originalPerformFullAnalysis && window.__originalEnrichWithPhase2Metrics),
    analisadorExiste: !!(window.audioAnalyzer || window.AudioAnalyzer),
    controleAtivo: !!window.SCORE_ORDER_CORRECTION_ENABLED
  };
  
  console.log('üìã [DIAGN√ìSTICO] Estado atual:', info);
  
  return {
    status: 'success',
    message: 'Diagn√≥stico conclu√≠do',
    info
  };
}

/**
 * üéõÔ∏è FUN√á√ÉO DE CONTROLE
 * Interface principal para gerenciar a corre√ß√£o
 */
function controlarCorrecaoOrdem(acao = 'status') {
  console.log(`üéõÔ∏è [CONTROLE] Executando a√ß√£o: ${acao}`);
  
  switch (acao.toLowerCase()) {
    case 'aplicar':
    case 'apply':
      return aplicarCorrecaoOrdemExecucao();
      
    case 'reverter':
    case 'revert':
      return reverterCorrecaoOrdemExecucao();
      
    case 'diagnosticar':
    case 'diagnose':
      return diagnosticarOrdemExecucao();
      
    case 'status':
    default:
      const aplicada = typeof window !== 'undefined' && !!window.__SCORE_ORDER_FIX_APPLIED;
      return {
        success: true,
        message: `Corre√ß√£o ${aplicada ? 'APLICADA' : 'N√ÉO APLICADA'}`,
        aplicada,
        versao: aplicada ? window.__SCORE_ORDER_FIX_VERSION : null
      };
  }
}

// üîß EXPORTA√á√ÉO PARA USO GLOBAL
if (typeof window !== 'undefined') {
  // Disponibilizar fun√ß√µes globalmente para controle manual
  window.aplicarCorrecaoOrdemExecucao = aplicarCorrecaoOrdemExecucao;
  window.reverterCorrecaoOrdemExecucao = reverterCorrecaoOrdemExecucao;
  window.diagnosticarOrdemExecucao = diagnosticarOrdemExecucao;
  window.controlarCorrecaoOrdem = controlarCorrecaoOrdem;
  
  console.log('üîß [INIT] Fun√ß√µes de corre√ß√£o dispon√≠veis:');
  console.log('   - window.controlarCorrecaoOrdem("aplicar") // Aplicar corre√ß√£o');
  console.log('   - window.controlarCorrecaoOrdem("status")  // Ver status');
  console.log('   - window.controlarCorrecaoOrdem("reverter") // Reverter');
  console.log('   - window.controlarCorrecaoOrdem("diagnosticar") // Diagn√≥stico');
}

// üìã INFORMA√á√ïES SOBRE A CORRE√á√ÉO
const SCORE_ORDER_FIX_INFO = {
  name: 'Corre√ß√£o da Ordem de Execu√ß√£o do Scoring',
  version: '1.0.0',
  description: 'Corrige a ordem de execu√ß√£o para calcular score AP√ìS bandas espectrais estarem prontas',
  problema: 'Score calculado antes das m√©tricas espectrais (bandEnergies) serem processadas',
  solucao: 'Mover c√°lculo do score para ap√≥s Fase 2 (enrichWithPhase2Metrics) completar',
  impacto: 'Zero - apenas corre√ß√£o da ordem, valores finais id√™nticos',
  seguranca: 'M√°xima - backups autom√°ticos e revers√£o dispon√≠vel',
  compatibility: '100% - UI e funcionalidades preservadas'
};

console.log('üìã [INFO] Solu√ß√£o carregada:', SCORE_ORDER_FIX_INFO.name, 'v' + SCORE_ORDER_FIX_INFO.version);
console.log('üéØ [INFO] Use window.controlarCorrecaoOrdem("aplicar") para aplicar a corre√ß√£o');

// üöÄ AUTO-APLICA√á√ÉO OPCIONAL (Desabilitada por seguran√ßa)
// Para aplicar automaticamente, descomentar a linha abaixo:
// if (typeof window !== 'undefined') aplicarCorrecaoOrdemExecucao();
